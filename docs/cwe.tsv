				
System characteristics	Failure modes	Faults (derived from ISO26262)	CWE's included in each category	Kernel configuration subsytem:attributes
Memory partitions dedicated to each software component shall be configured to prevent faults caused by interference between software components.  Data stored within each memory partition shall be protected from corruption or inconsistency (e.g., due to update operation on the data).  Stack and heap memory shall be protected from under or overflow, and access control shall be enforced so that prohibited read or write access to memory allocated to another software component shall be blocked.	Memory	ISO26262 serves as an example to demonstrate how each kernel configuration may be relevant to support safety standards.  It is up to the integrator to prove this relevance for any specific use case.	Represents commonly understood areas/terms within software development, and are meant to aid the user in identifying potential related weaknesses. It is possible for the same weakness to exist within multiple different categories.	This column indicates the context for each kernel configuration (see column H), indicating the relevant Linux kernel subsystem(s) and potential vulnerabilty which is addressed by the configuration setting.
		Corruption of memory content	CWE-466 Return of pointer value outside of expected range  CWE-467 Use of sizeof() on a pointer type  CWE-468 Incorrect pointer scaling  CWE-469 Use of pointer subtraction to determine size  CWE-476 NULL pointer dereference  CWE-587 Assignment of a fixed addres to a pointer  CWE-588 Attempt to access child of a non-structure pointer  CWE-763 Release of invalid pointer or reference  CWE-822 Untrusted pointer derefernece  CWE-823 Use of out-or-range pointer offset  CWE-824 Access of uninitialized pointer  CWE-825 Expired pointer dereference	Memory management subsystem, Heap Memory: Use after free
				Memory management subsystem, Heap Memory: Use after free
				
				Memory management subsystem, Heap Memory: Use after free
				Memory management subsystem, Heap Memory, Debug subsystem: Use after free
				
				
				Kernel Memory reference count: Use after free
		Inconsistent data	CWE-226 Sensitive information in resource not removed before reuse CWE-454 External initialization of trusted variables or data stores CWE-455 Non-exit on failed initialization CWE-459 Incomplete cleanup	GCC, plugins, Stack memory: Uninitialized variables: 
				GCC, plugins, Stack memory: Uninitialized variables: 
				Stack memory: Uninitialized variables:
			CWE-73 External control of file name or path CWE-410 Insufficient resource pool CWE-763 Release pointer or reference CWE-772 Missing release of resource after effective lifetime CWE-826 Premature release of resource during expected lifetime  CWE-908 Use of uninitialized resource CWE-909 Missing initialization of resource CWE-911 Improper update of reference count CWE-920 Improper restriction of power consumption	Kernel Memory: Isolation of critical code
				
		Stack overflow or underflow	CWE-120 Buffer copy without checking size of input ("classic buffer overflow)  CWE-121Stack-based bufer overflow  CWE-122 Heap-based buffer overflow  CWE-123 Write-what-where condition  CWE-124 Buffer underwrite ("buffer underflow")  CWE-125 Out-of-bounds read  CWE-126 Buffer over-read  CWE-127 Buffer under-read  CWE-129 Improper validation of array index  CWE-131 Incorrect calculation of buffer size  CWE-786 Access of memory location before start of buffer  CWE-787 Out-of-bounds write  CWE-788 Access memory location after end of buffer  CWE-805 Buffer access with incorrect length value	Stack memory: Stack overflow:
				Stack memory: Stack overflow:
				
				
				Stack memory: Stack overflow:
				Stack memory: Stack overflow:
				
				
				
				Heap memory: Heap overflow:
				
		Read or write access to memory allocated to another software element	CWE-73 External control of file name or path CWE-410 Insufficient resource pool CWE-763 Release pointer or reference CWE-772 Missing release of resource after effective lifetime CWE-826 Premature release of resource during expected lifetime  CWE-908 Use of uninitialized resource CWE-909 Missing initialization of resource CWE-911 Improper update of reference count CWE-920 Improper restriction of power consumption	Kernel Memory: Kernel corruption of user space memory
				
				
				
				
				
				
				
				
				
				Heap memory:  R/W access to memory allocated to another software element:
				
				Kernel Memory: R/W access to memory allocated to another software element: 
				
				Kernel Memory: W+X access to memory pages 
				Stack memory:  Enable traceability:
				
				Kernel memory:  Enable traceability:
				
				
				
				
				
				
The execution flow of various parallel threads in the system (kernel and user-space) is managed so that each task runs without blocks in exeuction, in the correct sequence, and exactly the correct number of times. Access to shared data is synchronized, and race conditions are avoided.  An incorrect thread execution flow will be detected and prevented.	Timing and execution			
				
		Blocking of execution	CWE-663 Use of a non-reentrant function in a concurrent context 	Watchdog, sysctl, debug: kernel mode lockup
				
				
		Deadlocks	CWE-833 Deadlock	
				
				Locking, debug: RT mutexes
				
		Livelocks	CWE-412 Unrestricted externally accessible lock CWE-413 Improper resource locking CWE-414 Missing lock check CWE-609 double-checking locking CWE-764 Multiple locks of a critical resource CWE-765 Multiple unlocks of a critical resource CWE-832 Unlock of a resource that is not locked	
				
				
				
				
				
				
				
				
		Incorrect allocation of execution time	CWE-770 Allocation of resources without limits or throttling	
		Incorrect synchronization between software elements	CWE-363 Race condition enabling link following CWE-364 Signal handler race condition CWE-365 Race condition in switch CWE-366 Race condition within a thread CWE-367 Time-of-check time-of-use race condition CWE-368 Context switching race condition CWE-386 Symbolic name not mapped to correct object CWE-421 Race condition during access to alternate channel CWE-567 Unsynchronized access to shared data in a multi-threaded context CWE-820 Missing synchronization CWE-821 Incorrect synchronization CWE-1088 Synchronous access of remote resource without timeout	